{"ast":null,"code":"var _jsxFileName = \"/root/tesis/gps/src/components/Map/Map.js\";\nimport React, { useEffect, useRef, useState } from 'react';\nimport L from 'leaflet';\nimport * as turf from '@turf/turf';\nimport axios from 'axios';\nimport 'leaflet/dist/leaflet.css';\nimport * as mqtt from 'mqtt/dist/mqtt';\nfunction Map() {\n  const mapRef = useRef(null);\n  const [vehicles, setVehicles] = useState([]);\n  const [markers, setMarkers] = useState({});\n  const mapInstance = useRef(null);\n  const mqttClient = useRef(null);\n\n  // Fetch registered vehicles\n  useEffect(() => {\n    const fetchVehicles = async () => {\n      try {\n        const response = await axios.get('http://localhost:3013/api/devices');\n        setVehicles(response.data.data);\n      } catch (err) {\n        console.error('Error fetching vehicles:', err);\n      }\n    };\n    fetchVehicles();\n  }, []);\n\n  // Initialize MQTT connection\n  useEffect(() => {\n    // MQTT connection options\n    const options = {\n      protocol: 'mqtt',\n      hostname: 'localhost',\n      port: 1883,\n      path: '/mqtt'\n    };\n\n    // Connect to MQTT broker\n    mqttClient.current = mqtt.connect(options);\n    mqttClient.current.on('connect', () => {\n      console.log('Connected to MQTT broker');\n      mqttClient.current.subscribe('gps/location', err => {\n        if (!err) {\n          console.log('Subscribed to gps/location');\n        }\n      });\n    });\n    mqttClient.current.on('message', (topic, message) => {\n      try {\n        const locationData = JSON.parse(message.toString());\n        updateVehicleLocation(locationData);\n      } catch (err) {\n        console.error('Error processing MQTT message:', err);\n      }\n    });\n    return () => {\n      if (mqttClient.current) {\n        mqttClient.current.end();\n      }\n    };\n  }, []);\n\n  // Initialize map\n  useEffect(() => {\n    const jakartaCoords = [-6.2088, 106.8456];\n    const map = L.map(mapRef.current, {\n      center: jakartaCoords,\n      zoom: 11,\n      zoomControl: false\n    });\n    mapInstance.current = map;\n    L.tileLayer('https://{s}.basemaps.cartocdn.com/dark_all/{z}/{x}/{y}{r}.png', {\n      attribution: '&copy; OpenStreetMap contributors &copy; CARTO',\n      subdomains: 'abcd',\n      maxZoom: 20\n    }).addTo(map);\n    L.control.zoom({\n      position: 'topright'\n    }).addTo(map);\n    return () => {\n      map.remove();\n    };\n  }, []);\n\n  // Update vehicle location on map\n  const updateVehicleLocation = locationData => {\n    if (!mapInstance.current) return;\n    const {\n      device_id,\n      latitude,\n      longitude\n    } = locationData;\n    const vehicle = vehicles.find(v => v.device_id === device_id);\n    if (!vehicle) {\n      console.log(`Unregistered device: ${device_id}`);\n      return; // Skip unregistered vehicles\n    }\n    if (markers[device_id]) {\n      // Update existing marker position\n      markers[device_id].setLatLng([latitude, longitude]);\n      markers[device_id].getPopup().setContent(`\n        <div style=\"text-align: center;\">\n          <b>${vehicle.device_name}</b><br>\n          ID: ${vehicle.device_id}<br>\n          Reg No: ${vehicle.reg_no}<br>\n          Last Update: ${new Date().toLocaleTimeString()}\n        </div>\n      `);\n    } else {\n      // Create new marker for vehicle\n      const marker = L.marker([latitude, longitude]).bindPopup(`\n          <div style=\"text-align: center;\">\n            <b>${vehicle.device_name}</b><br>\n            ID: ${vehicle.device_id}<br>\n            Reg No: ${vehicle.reg_no}<br>\n            Last Update: ${new Date().toLocaleTimeString()}\n          </div>\n        `).addTo(mapInstance.current);\n      setMarkers(prev => ({\n        ...prev,\n        [device_id]: marker\n      }));\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    ref: mapRef,\n    className: \"map-container\",\n    style: {\n      height: 'calc(100vh - 60px)'\n    } // Adjust height based on your header\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 5\n    }\n  });\n}\nexport default Map;","map":{"version":3,"names":["React","useEffect","useRef","useState","L","turf","axios","mqtt","Map","mapRef","vehicles","setVehicles","markers","setMarkers","mapInstance","mqttClient","fetchVehicles","response","get","data","err","console","error","options","protocol","hostname","port","path","current","connect","on","log","subscribe","topic","message","locationData","JSON","parse","toString","updateVehicleLocation","end","jakartaCoords","map","center","zoom","zoomControl","tileLayer","attribution","subdomains","maxZoom","addTo","control","position","remove","device_id","latitude","longitude","vehicle","find","v","setLatLng","getPopup","setContent","device_name","reg_no","Date","toLocaleTimeString","marker","bindPopup","prev","createElement","ref","className","style","height","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/root/tesis/gps/src/components/Map/Map.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport L from 'leaflet';\nimport * as turf from '@turf/turf';\nimport axios from 'axios';\nimport 'leaflet/dist/leaflet.css';\nimport * as mqtt from 'mqtt/dist/mqtt';\n\nfunction Map() {\n  const mapRef = useRef(null);\n  const [vehicles, setVehicles] = useState([]);\n  const [markers, setMarkers] = useState({});\n  const mapInstance = useRef(null);\n  const mqttClient = useRef(null);\n\n  // Fetch registered vehicles\n  useEffect(() => {\n    const fetchVehicles = async () => {\n      try {\n        const response = await axios.get('http://localhost:3013/api/devices');\n        setVehicles(response.data.data);\n      } catch (err) {\n        console.error('Error fetching vehicles:', err);\n      }\n    };\n    fetchVehicles();\n  }, []);\n\n  // Initialize MQTT connection\n  useEffect(() => {\n    // MQTT connection options\n    const options = {\n      protocol: 'mqtt',\n      hostname: 'localhost',\n      port: 1883,\n      path: '/mqtt'\n    };\n\n    // Connect to MQTT broker\n    mqttClient.current = mqtt.connect(options);\n\n    mqttClient.current.on('connect', () => {\n      console.log('Connected to MQTT broker');\n      mqttClient.current.subscribe('gps/location', (err) => {\n        if (!err) {\n          console.log('Subscribed to gps/location');\n        }\n      });\n    });\n\n    mqttClient.current.on('message', (topic, message) => {\n      try {\n        const locationData = JSON.parse(message.toString());\n        updateVehicleLocation(locationData);\n      } catch (err) {\n        console.error('Error processing MQTT message:', err);\n      }\n    });\n\n    return () => {\n      if (mqttClient.current) {\n        mqttClient.current.end();\n      }\n    };\n  }, []);\n\n  // Initialize map\n  useEffect(() => {\n    const jakartaCoords = [-6.2088, 106.8456];\n    const map = L.map(mapRef.current, {\n      center: jakartaCoords,\n      zoom: 11,\n      zoomControl: false\n    });\n    mapInstance.current = map;\n\n    L.tileLayer('https://{s}.basemaps.cartocdn.com/dark_all/{z}/{x}/{y}{r}.png', {\n      attribution: '&copy; OpenStreetMap contributors &copy; CARTO',\n      subdomains: 'abcd',\n      maxZoom: 20\n    }).addTo(map);\n\n    L.control.zoom({\n      position: 'topright'\n    }).addTo(map);\n\n    return () => {\n      map.remove();\n    };\n  }, []);\n\n  // Update vehicle location on map\n  const updateVehicleLocation = (locationData) => {\n    if (!mapInstance.current) return;\n\n    const { device_id, latitude, longitude } = locationData;\n    const vehicle = vehicles.find(v => v.device_id === device_id);\n\n    if (!vehicle) {\n      console.log(`Unregistered device: ${device_id}`);\n      return; // Skip unregistered vehicles\n    }\n\n    if (markers[device_id]) {\n      // Update existing marker position\n      markers[device_id].setLatLng([latitude, longitude]);\n      markers[device_id].getPopup().setContent(`\n        <div style=\"text-align: center;\">\n          <b>${vehicle.device_name}</b><br>\n          ID: ${vehicle.device_id}<br>\n          Reg No: ${vehicle.reg_no}<br>\n          Last Update: ${new Date().toLocaleTimeString()}\n        </div>\n      `);\n    } else {\n      // Create new marker for vehicle\n      const marker = L.marker([latitude, longitude])\n        .bindPopup(`\n          <div style=\"text-align: center;\">\n            <b>${vehicle.device_name}</b><br>\n            ID: ${vehicle.device_id}<br>\n            Reg No: ${vehicle.reg_no}<br>\n            Last Update: ${new Date().toLocaleTimeString()}\n          </div>\n        `)\n        .addTo(mapInstance.current);\n      \n      setMarkers(prev => ({\n        ...prev,\n        [device_id]: marker\n      }));\n    }\n  };\n\n  return (\n    <div \n      ref={mapRef} \n      className=\"map-container\" \n      style={{ height: 'calc(100vh - 60px)' }} // Adjust height based on your header\n    />\n  );\n}\n\nexport default Map;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}