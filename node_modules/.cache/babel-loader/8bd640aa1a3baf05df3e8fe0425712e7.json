{"ast":null,"code":"var _jsxFileName = \"/root/tesis/gps/src/components/Map/Map.js\";\nimport React, { useEffect, useRef } from 'react';\nimport L from 'leaflet';\nimport * as turf from '@turf/turf';\nimport * as mqtt from 'mqtt/dist/mqtt';\nimport 'leaflet/dist/leaflet.css';\nfunction Map() {\n  const mapRef = useRef(null);\n  const mapInstance = useRef(null);\n  const markersRef = useRef({});\n  useEffect(() => {\n    // Jakarta coordinates\n    const jakartaCoords = [-6.2088, 106.8456];\n\n    // Initialize the map\n    const map = L.map(mapRef.current, {\n      center: jakartaCoords,\n      zoom: 11,\n      zoomControl: false\n    });\n    mapInstance.current = map;\n\n    // Add the dark mode tile layer\n    L.tileLayer('https://{s}.basemaps.cartocdn.com/dark_all/{z}/{x}/{y}{r}.png', {\n      attribution: '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors &copy; <a href=\"https://carto.com/attributions\">CARTO</a>',\n      subdomains: 'abcd',\n      maxZoom: 20\n    }).addTo(map);\n\n    // Create a circle around Jakarta using Turf.js\n    const center = turf.point(jakartaCoords);\n    const radius = 10; // 10 km radius\n    const options = {\n      steps: 64,\n      units: 'kilometers'\n    };\n    const circle = turf.circle(center, radius, options);\n\n    // Convert Turf circle to Leaflet layer and add to map\n    L.geoJSON(circle, {\n      style: {\n        color: '#ffffff',\n        weight: 2,\n        opacity: 0.7,\n        fillOpacity: 0.1\n      }\n    }).addTo(map);\n\n    // Add zoom control to a custom position\n    L.control.zoom({\n      position: 'topright'\n    }).addTo(map);\n\n    // Initialize MQTT connection dengan WebSocket\n    const client = mqtt.connect('ws://localhost:8083/mqtt', {\n      clientId: 'map_client_' + Math.random().toString(16).substr(2, 8)\n    });\n    client.on('connect', () => {\n      console.log('Connected to MQTT broker');\n      client.subscribe('gps/location', err => {\n        if (err) {\n          console.error('Subscription error:', err);\n        } else {\n          console.log('Subscribed to gps/location');\n        }\n      });\n    });\n    client.on('message', (topic, message) => {\n      try {\n        const locationData = JSON.parse(message.toString());\n        console.log('Received location:', locationData); // Debug log\n        const {\n          device_id,\n          latitude,\n          longitude\n        } = locationData;\n\n        // Update or create marker for the device\n        if (markersRef.current[device_id]) {\n          console.log('Updating marker position:', device_id); // Debug log\n          markersRef.current[device_id].setLatLng([latitude, longitude]);\n        } else {\n          console.log('Creating new marker:', device_id); // Debug log\n          const marker = L.marker([latitude, longitude]).bindPopup(`\n              <div>\n                <h4>Device: ${device_id}</h4>\n                <p>Lat: ${latitude}</p>\n                <p>Lng: ${longitude}</p>\n              </div>\n            `).addTo(mapInstance.current);\n          markersRef.current[device_id] = marker;\n        }\n      } catch (err) {\n        console.error('Error processing MQTT message:', err);\n      }\n    });\n    client.on('error', err => {\n      console.error('MQTT Error:', err);\n    });\n\n    // Cleanup function\n    return () => {\n      if (mapInstance.current) {\n        mapInstance.current.remove();\n      }\n      if (client) {\n        client.end();\n      }\n    };\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    ref: mapRef,\n    className: \"map-container\",\n    style: {\n      height: 'calc(100vh - 60px)'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 5\n    }\n  });\n}\nexport default Map;","map":{"version":3,"names":["React","useEffect","useRef","L","turf","mqtt","Map","mapRef","mapInstance","markersRef","jakartaCoords","map","current","center","zoom","zoomControl","tileLayer","attribution","subdomains","maxZoom","addTo","point","radius","options","steps","units","circle","geoJSON","style","color","weight","opacity","fillOpacity","control","position","client","connect","clientId","Math","random","toString","substr","on","console","log","subscribe","err","error","topic","message","locationData","JSON","parse","device_id","latitude","longitude","setLatLng","marker","bindPopup","remove","end","createElement","ref","className","height","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/root/tesis/gps/src/components/Map/Map.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport L from 'leaflet';\nimport * as turf from '@turf/turf';\nimport * as mqtt from 'mqtt/dist/mqtt';\nimport 'leaflet/dist/leaflet.css';\n\nfunction Map() {\n  const mapRef = useRef(null);\n  const mapInstance = useRef(null);\n  const markersRef = useRef({});\n\n  useEffect(() => {\n    // Jakarta coordinates\n    const jakartaCoords = [-6.2088, 106.8456];\n\n    // Initialize the map\n    const map = L.map(mapRef.current, {\n      center: jakartaCoords,\n      zoom: 11,\n      zoomControl: false\n    });\n    mapInstance.current = map;\n\n    // Add the dark mode tile layer\n    L.tileLayer('https://{s}.basemaps.cartocdn.com/dark_all/{z}/{x}/{y}{r}.png', {\n      attribution: '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors &copy; <a href=\"https://carto.com/attributions\">CARTO</a>',\n      subdomains: 'abcd',\n      maxZoom: 20\n    }).addTo(map);\n\n    // Create a circle around Jakarta using Turf.js\n    const center = turf.point(jakartaCoords);\n    const radius = 10; // 10 km radius\n    const options = { steps: 64, units: 'kilometers' };\n    const circle = turf.circle(center, radius, options);\n\n    // Convert Turf circle to Leaflet layer and add to map\n    L.geoJSON(circle, {\n      style: {\n        color: '#ffffff',\n        weight: 2,\n        opacity: 0.7,\n        fillOpacity: 0.1\n      }\n    }).addTo(map);\n\n    // Add zoom control to a custom position\n    L.control.zoom({\n      position: 'topright'\n    }).addTo(map);\n\n    // Initialize MQTT connection dengan WebSocket\n    const client = mqtt.connect('ws://localhost:8083/mqtt', {\n      clientId: 'map_client_' + Math.random().toString(16).substr(2, 8)\n    });\n\n    client.on('connect', () => {\n      console.log('Connected to MQTT broker');\n      client.subscribe('gps/location', (err) => {\n        if (err) {\n          console.error('Subscription error:', err);\n        } else {\n          console.log('Subscribed to gps/location');\n        }\n      });\n    });\n\n    client.on('message', (topic, message) => {\n      try {\n        const locationData = JSON.parse(message.toString());\n        console.log('Received location:', locationData); // Debug log\n        const { device_id, latitude, longitude } = locationData;\n\n        // Update or create marker for the device\n        if (markersRef.current[device_id]) {\n          console.log('Updating marker position:', device_id); // Debug log\n          markersRef.current[device_id].setLatLng([latitude, longitude]);\n        } else {\n          console.log('Creating new marker:', device_id); // Debug log\n          const marker = L.marker([latitude, longitude])\n            .bindPopup(`\n              <div>\n                <h4>Device: ${device_id}</h4>\n                <p>Lat: ${latitude}</p>\n                <p>Lng: ${longitude}</p>\n              </div>\n            `)\n            .addTo(mapInstance.current);\n          markersRef.current[device_id] = marker;\n        }\n      } catch (err) {\n        console.error('Error processing MQTT message:', err);\n      }\n    });\n\n    client.on('error', (err) => {\n      console.error('MQTT Error:', err);\n    });\n\n    // Cleanup function\n    return () => {\n      if (mapInstance.current) {\n        mapInstance.current.remove();\n      }\n      if (client) {\n        client.end();\n      }\n    };\n  }, []);\n\n  return (\n    <div \n      ref={mapRef} \n      className=\"map-container\" \n      style={{ height: 'calc(100vh - 60px)' }}\n    />\n  );\n}\n\nexport default Map;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}