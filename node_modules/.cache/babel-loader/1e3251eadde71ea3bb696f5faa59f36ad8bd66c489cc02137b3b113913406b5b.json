{"ast":null,"code":"var _jsxFileName = \"/root/tesis/gps/src/components/Map/Map.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport L from 'leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport mqtt from 'mqtt';\n\n// MQTT Configuration\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MQTT_BROKER = 'mqtt://localhost:1883';\nconst MQTT_TOPIC = 'gps/location';\nfunction Map() {\n  _s();\n  const mapRef = useRef(null);\n  const [map, setMap] = useState(null);\n  const [marker, setMarker] = useState(null);\n  const [mqttStatus, setMqttStatus] = useState('Disconnected');\n  const [lastUpdate, setLastUpdate] = useState(null);\n  const [locationHistory, setLocationHistory] = useState([]);\n  useEffect(() => {\n    // Initialize map (Jakarta center)\n    const initialPosition = [-6.2088, 106.8456];\n    const mapInstance = L.map(mapRef.current).setView(initialPosition, 12);\n\n    // Add dark mode tile layer\n    L.tileLayer('https://{s}.basemaps.cartocdn.com/dark_all/{z}/{x}/{y}{r}.png', {\n      attribution: '&copy; OpenStreetMap contributors &copy; CARTO',\n      maxZoom: 19\n    }).addTo(mapInstance);\n\n    // Create marker with custom popup\n    const markerInstance = L.marker(initialPosition).bindPopup('Waiting for location updates...').addTo(mapInstance);\n    setMap(mapInstance);\n    setMarker(markerInstance);\n\n    // Connect to MQTT broker\n    console.log('Connecting to MQTT broker...');\n    const client = mqtt.connect(MQTT_BROKER);\n    client.on('connect', () => {\n      console.log('Connected to MQTT broker');\n      setMqttStatus('Connected');\n      client.subscribe(MQTT_TOPIC, err => {\n        if (err) {\n          console.error('Subscription error:', err);\n          setMqttStatus('Subscription Error');\n        } else {\n          console.log(`Subscribed to ${MQTT_TOPIC}`);\n          setMqttStatus('Subscribed');\n        }\n      });\n    });\n    client.on('message', (topic, message) => {\n      try {\n        const data = JSON.parse(message.toString());\n        console.log('Received location:', data);\n        const newPosition = [data.latitude, data.longitude];\n        const timestamp = new Date(data.timestamp * 1000);\n\n        // Update marker position and popup\n        if (markerInstance) {\n          markerInstance.setLatLng(newPosition);\n          markerInstance.setPopupContent(`\n            <b>Current Location</b><br>\n            Latitude: ${data.latitude.toFixed(6)}<br>\n            Longitude: ${data.longitude.toFixed(6)}<br>\n            Time: ${timestamp.toLocaleTimeString()}\n          `);\n          markerInstance.openPopup();\n        }\n\n        // Update map view\n        mapInstance.setView(newPosition);\n\n        // Update state\n        setLastUpdate(timestamp);\n        setLocationHistory(prev => [...prev, {\n          position: newPosition,\n          timestamp\n        }].slice(-10)); // Keep last 10 updates\n      } catch (error) {\n        console.error('Error processing message:', error);\n      }\n    });\n    client.on('error', error => {\n      console.error('MQTT Error:', error);\n      setMqttStatus('Error');\n    });\n    client.on('close', () => {\n      console.log('Disconnected from MQTT broker');\n      setMqttStatus('Disconnected');\n    });\n\n    // Cleanup on unmount\n    return () => {\n      console.log('Cleaning up...');\n      client.end();\n      mapInstance.remove();\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"map-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"status-bar\",\n      style: {\n        padding: '10px',\n        background: '#333',\n        color: 'white'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"MQTT Status:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), \" \", mqttStatus, \" |\", /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \" Topic:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), \" \", MQTT_TOPIC, \" |\", /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \" Last Update:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), \" \", lastUpdate ? lastUpdate.toLocaleString() : 'None']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: mapRef,\n      style: {\n        height: '70vh',\n        width: '100%'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"history-panel\",\n      style: {\n        padding: '10px',\n        background: '#f5f5f5',\n        height: '20vh',\n        overflowY: 'auto'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Location History\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          flexDirection: 'column-reverse'\n        },\n        children: locationHistory.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            padding: '5px',\n            borderBottom: '1px solid #ddd'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: item.timestamp.toLocaleTimeString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 15\n          }, this), \": Lat: \", item.position[0].toFixed(6), \", Lng: \", item.position[1].toFixed(6)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 5\n  }, this);\n}\n_s(Map, \"Zm7LQ1TbFwkAKI0JP/y3pyAUK6Q=\");\n_c = Map;\nexport default Map;\nvar _c;\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"names":["React","useEffect","useRef","useState","L","mqtt","jsxDEV","_jsxDEV","MQTT_BROKER","MQTT_TOPIC","Map","_s","mapRef","map","setMap","marker","setMarker","mqttStatus","setMqttStatus","lastUpdate","setLastUpdate","locationHistory","setLocationHistory","initialPosition","mapInstance","current","setView","tileLayer","attribution","maxZoom","addTo","markerInstance","bindPopup","console","log","client","connect","on","subscribe","err","error","topic","message","data","JSON","parse","toString","newPosition","latitude","longitude","timestamp","Date","setLatLng","setPopupContent","toFixed","toLocaleTimeString","openPopup","prev","position","slice","end","remove","className","children","style","padding","background","color","fileName","_jsxFileName","lineNumber","columnNumber","toLocaleString","ref","height","width","overflowY","display","flexDirection","item","index","borderBottom","_c","$RefreshReg$"],"sources":["/root/tesis/gps/src/components/Map/Map.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport L from 'leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport mqtt from 'mqtt';\n\n// MQTT Configuration\nconst MQTT_BROKER = 'mqtt://localhost:1883';\nconst MQTT_TOPIC = 'gps/location';\n\nfunction Map() {\n  const mapRef = useRef(null);\n  const [map, setMap] = useState(null);\n  const [marker, setMarker] = useState(null);\n  const [mqttStatus, setMqttStatus] = useState('Disconnected');\n  const [lastUpdate, setLastUpdate] = useState(null);\n  const [locationHistory, setLocationHistory] = useState([]);\n\n  useEffect(() => {\n    // Initialize map (Jakarta center)\n    const initialPosition = [-6.2088, 106.8456];\n    const mapInstance = L.map(mapRef.current).setView(initialPosition, 12);\n    \n    // Add dark mode tile layer\n    L.tileLayer('https://{s}.basemaps.cartocdn.com/dark_all/{z}/{x}/{y}{r}.png', {\n      attribution: '&copy; OpenStreetMap contributors &copy; CARTO',\n      maxZoom: 19\n    }).addTo(mapInstance);\n\n    // Create marker with custom popup\n    const markerInstance = L.marker(initialPosition)\n      .bindPopup('Waiting for location updates...')\n      .addTo(mapInstance);\n    \n    setMap(mapInstance);\n    setMarker(markerInstance);\n\n    // Connect to MQTT broker\n    console.log('Connecting to MQTT broker...');\n    const client = mqtt.connect(MQTT_BROKER);\n\n    client.on('connect', () => {\n      console.log('Connected to MQTT broker');\n      setMqttStatus('Connected');\n      \n      client.subscribe(MQTT_TOPIC, (err) => {\n        if (err) {\n          console.error('Subscription error:', err);\n          setMqttStatus('Subscription Error');\n        } else {\n          console.log(`Subscribed to ${MQTT_TOPIC}`);\n          setMqttStatus('Subscribed');\n        }\n      });\n    });\n\n    client.on('message', (topic, message) => {\n      try {\n        const data = JSON.parse(message.toString());\n        console.log('Received location:', data);\n\n        const newPosition = [data.latitude, data.longitude];\n        const timestamp = new Date(data.timestamp * 1000);\n        \n        // Update marker position and popup\n        if (markerInstance) {\n          markerInstance.setLatLng(newPosition);\n          markerInstance.setPopupContent(`\n            <b>Current Location</b><br>\n            Latitude: ${data.latitude.toFixed(6)}<br>\n            Longitude: ${data.longitude.toFixed(6)}<br>\n            Time: ${timestamp.toLocaleTimeString()}\n          `);\n          markerInstance.openPopup();\n        }\n        \n        // Update map view\n        mapInstance.setView(newPosition);\n        \n        // Update state\n        setLastUpdate(timestamp);\n        setLocationHistory(prev => [\n          ...prev, \n          { position: newPosition, timestamp }\n        ].slice(-10)); // Keep last 10 updates\n        \n      } catch (error) {\n        console.error('Error processing message:', error);\n      }\n    });\n\n    client.on('error', (error) => {\n      console.error('MQTT Error:', error);\n      setMqttStatus('Error');\n    });\n\n    client.on('close', () => {\n      console.log('Disconnected from MQTT broker');\n      setMqttStatus('Disconnected');\n    });\n\n    // Cleanup on unmount\n    return () => {\n      console.log('Cleaning up...');\n      client.end();\n      mapInstance.remove();\n    };\n  }, []);\n\n  return (\n    <div className=\"map-container\">\n      <div className=\"status-bar\" style={{\n        padding: '10px',\n        background: '#333',\n        color: 'white'\n      }}>\n        <strong>MQTT Status:</strong> {mqttStatus} | \n        <strong> Topic:</strong> {MQTT_TOPIC} |\n        <strong> Last Update:</strong> {lastUpdate ? lastUpdate.toLocaleString() : 'None'}\n      </div>\n      \n      <div \n        ref={mapRef} \n        style={{ height: '70vh', width: '100%' }}\n      />\n      \n      <div className=\"history-panel\" style={{\n        padding: '10px',\n        background: '#f5f5f5',\n        height: '20vh',\n        overflowY: 'auto'\n      }}>\n        <h3>Location History</h3>\n        <div style={{ display: 'flex', flexDirection: 'column-reverse' }}>\n          {locationHistory.map((item, index) => (\n            <div key={index} style={{\n              padding: '5px',\n              borderBottom: '1px solid #ddd'\n            }}>\n              <strong>{item.timestamp.toLocaleTimeString()}</strong>: \n              Lat: {item.position[0].toFixed(6)}, \n              Lng: {item.position[1].toFixed(6)}\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Map;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}