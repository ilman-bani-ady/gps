{"ast":null,"code":"var _jsxFileName = \"/root/tesis/gps/src/components/Map/Map.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport L from 'leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Map() {\n  _s();\n  const mapRef = useRef(null);\n  const [marker, setMarker] = useState(null);\n  const [map, setMap] = useState(null);\n  useEffect(() => {\n    const jakartaCoords = [-6.2088, 106.8456]; // Jakarta coordinates\n\n    // Initialize the map\n    const mapInstance = L.map(mapRef.current, {\n      center: jakartaCoords,\n      zoom: 11,\n      zoomControl: false\n    });\n    setMap(mapInstance);\n\n    // Add the dark mode tile layer\n    L.tileLayer('https://{s}.basemaps.cartocdn.com/dark_all/{z}/{x}/{y}{r}.png', {\n      attribution: '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors &copy; <a href=\"https://carto.com/attributions\">CARTO</a>',\n      subdomains: 'abcd',\n      maxZoom: 20\n    }).addTo(mapInstance);\n\n    // Initialize marker\n    const initialMarker = L.marker(jakartaCoords).addTo(mapInstance);\n    setMarker(initialMarker);\n\n    // WebSocket connection\n    const ws = new WebSocket('ws://localhost:8080');\n    ws.onopen = () => {\n      console.log('Connected to WebSocket server');\n    };\n    ws.onmessage = event => {\n      try {\n        const locationData = JSON.parse(event.data);\n        const newPosition = [locationData.latitude, locationData.longitude];\n\n        // Update marker position\n        if (marker) {\n          marker.setLatLng(newPosition);\n        }\n\n        // Center map on new position\n        mapInstance.setView(newPosition);\n      } catch (error) {\n        console.error('Error processing WebSocket message:', error);\n      }\n    };\n    ws.onclose = () => {\n      console.log('Disconnected from WebSocket server');\n    };\n\n    // Add zoom control to a custom position\n    L.control.zoom({\n      position: 'topright'\n    }).addTo(mapInstance);\n\n    // Cleanup function\n    return () => {\n      ws.close();\n      mapInstance.remove();\n    };\n  }, [marker]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: mapRef,\n    className: \"map-container\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 10\n  }, this);\n}\n_s(Map, \"3HmR5bwEwcRmVtLfVGJu2iy3tzI=\");\n_c = Map;\nexport default Map;\nvar _c;\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"names":["React","useEffect","useRef","useState","L","jsxDEV","_jsxDEV","Map","_s","mapRef","marker","setMarker","map","setMap","jakartaCoords","mapInstance","current","center","zoom","zoomControl","tileLayer","attribution","subdomains","maxZoom","addTo","initialMarker","ws","WebSocket","onopen","console","log","onmessage","event","locationData","JSON","parse","data","newPosition","latitude","longitude","setLatLng","setView","error","onclose","control","position","close","remove","ref","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/root/tesis/gps/src/components/Map/Map.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport L from 'leaflet';\nimport 'leaflet/dist/leaflet.css';\n\nfunction Map() {\n  const mapRef = useRef(null);\n  const [marker, setMarker] = useState(null);\n  const [map, setMap] = useState(null);\n\n  useEffect(() => {\n    const jakartaCoords = [-6.2088, 106.8456]; // Jakarta coordinates\n\n    // Initialize the map\n    const mapInstance = L.map(mapRef.current, {\n      center: jakartaCoords,\n      zoom: 11,\n      zoomControl: false,\n    });\n    setMap(mapInstance);\n\n    // Add the dark mode tile layer\n    L.tileLayer(\n      'https://{s}.basemaps.cartocdn.com/dark_all/{z}/{x}/{y}{r}.png',\n      {\n        attribution:\n          '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors &copy; <a href=\"https://carto.com/attributions\">CARTO</a>',\n        subdomains: 'abcd',\n        maxZoom: 20,\n      }\n    ).addTo(mapInstance);\n\n    // Initialize marker\n    const initialMarker = L.marker(jakartaCoords).addTo(mapInstance);\n    setMarker(initialMarker);\n\n    // WebSocket connection\n    const ws = new WebSocket('ws://localhost:8080');\n\n    ws.onopen = () => {\n      console.log('Connected to WebSocket server');\n    };\n\n    ws.onmessage = (event) => {\n      try {\n        const locationData = JSON.parse(event.data);\n        const newPosition = [locationData.latitude, locationData.longitude];\n\n        // Update marker position\n        if (marker) {\n          marker.setLatLng(newPosition);\n        }\n\n        // Center map on new position\n        mapInstance.setView(newPosition);\n      } catch (error) {\n        console.error('Error processing WebSocket message:', error);\n      }\n    };\n\n    ws.onclose = () => {\n      console.log('Disconnected from WebSocket server');\n    };\n\n    // Add zoom control to a custom position\n    L.control.zoom({\n      position: 'topright',\n    }).addTo(mapInstance);\n\n    // Cleanup function\n    return () => {\n      ws.close();\n      mapInstance.remove();\n    };\n  }, [marker]);\n\n  return <div ref={mapRef} className=\"map-container\" />;\n}\n\nexport default Map;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAC1D,OAAOC,CAAC,MAAM,SAAS;AACvB,OAAO,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAMC,MAAM,GAAGP,MAAM,CAAC,IAAI,CAAC;EAC3B,MAAM,CAACQ,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAC1C,MAAM,CAACS,GAAG,EAAEC,MAAM,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAEpCF,SAAS,CAAC,MAAM;IACd,MAAMa,aAAa,GAAG,CAAC,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC,CAAC;;IAE3C;IACA,MAAMC,WAAW,GAAGX,CAAC,CAACQ,GAAG,CAACH,MAAM,CAACO,OAAO,EAAE;MACxCC,MAAM,EAAEH,aAAa;MACrBI,IAAI,EAAE,EAAE;MACRC,WAAW,EAAE;IACf,CAAC,CAAC;IACFN,MAAM,CAACE,WAAW,CAAC;;IAEnB;IACAX,CAAC,CAACgB,SAAS,CACT,+DAA+D,EAC/D;MACEC,WAAW,EACT,mJAAmJ;MACrJC,UAAU,EAAE,MAAM;MAClBC,OAAO,EAAE;IACX,CACF,CAAC,CAACC,KAAK,CAACT,WAAW,CAAC;;IAEpB;IACA,MAAMU,aAAa,GAAGrB,CAAC,CAACM,MAAM,CAACI,aAAa,CAAC,CAACU,KAAK,CAACT,WAAW,CAAC;IAChEJ,SAAS,CAACc,aAAa,CAAC;;IAExB;IACA,MAAMC,EAAE,GAAG,IAAIC,SAAS,CAAC,qBAAqB,CAAC;IAE/CD,EAAE,CAACE,MAAM,GAAG,MAAM;MAChBC,OAAO,CAACC,GAAG,CAAC,+BAA+B,CAAC;IAC9C,CAAC;IAEDJ,EAAE,CAACK,SAAS,GAAIC,KAAK,IAAK;MACxB,IAAI;QACF,MAAMC,YAAY,GAAGC,IAAI,CAACC,KAAK,CAACH,KAAK,CAACI,IAAI,CAAC;QAC3C,MAAMC,WAAW,GAAG,CAACJ,YAAY,CAACK,QAAQ,EAAEL,YAAY,CAACM,SAAS,CAAC;;QAEnE;QACA,IAAI7B,MAAM,EAAE;UACVA,MAAM,CAAC8B,SAAS,CAACH,WAAW,CAAC;QAC/B;;QAEA;QACAtB,WAAW,CAAC0B,OAAO,CAACJ,WAAW,CAAC;MAClC,CAAC,CAAC,OAAOK,KAAK,EAAE;QACdb,OAAO,CAACa,KAAK,CAAC,qCAAqC,EAAEA,KAAK,CAAC;MAC7D;IACF,CAAC;IAEDhB,EAAE,CAACiB,OAAO,GAAG,MAAM;MACjBd,OAAO,CAACC,GAAG,CAAC,oCAAoC,CAAC;IACnD,CAAC;;IAED;IACA1B,CAAC,CAACwC,OAAO,CAAC1B,IAAI,CAAC;MACb2B,QAAQ,EAAE;IACZ,CAAC,CAAC,CAACrB,KAAK,CAACT,WAAW,CAAC;;IAErB;IACA,OAAO,MAAM;MACXW,EAAE,CAACoB,KAAK,CAAC,CAAC;MACV/B,WAAW,CAACgC,MAAM,CAAC,CAAC;IACtB,CAAC;EACH,CAAC,EAAE,CAACrC,MAAM,CAAC,CAAC;EAEZ,oBAAOJ,OAAA;IAAK0C,GAAG,EAAEvC,MAAO;IAACwC,SAAS,EAAC;EAAe;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACvD;AAAC7C,EAAA,CAxEQD,GAAG;AAAA+C,EAAA,GAAH/C,GAAG;AA0EZ,eAAeA,GAAG;AAAC,IAAA+C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}