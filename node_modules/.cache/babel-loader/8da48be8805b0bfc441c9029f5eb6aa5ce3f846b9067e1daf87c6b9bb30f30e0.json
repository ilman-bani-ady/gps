{"ast":null,"code":"var _jsxFileName = \"/root/tesis/gps/src/components/Map/Map.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport L from 'leaflet';\nimport * as turf from '@turf/turf';\nimport 'leaflet/dist/leaflet.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Map() {\n  _s();\n  const mapRef = useRef(null);\n  useEffect(() => {\n    // Jakarta coordinates\n    const jakartaCoords = [-6.2088, 106.8456];\n\n    // Daftar lokasi yang ingin ditampilkan\n    const locations = [{\n      coords: [-6.1751, 106.8650],\n      name: 'Ancol'\n    }, {\n      coords: [-6.1754, 106.8272],\n      name: 'Monas'\n    }, {\n      coords: [-6.3022, 106.8149],\n      name: 'Ragunan'\n    }, {\n      coords: [-6.2919, 106.7892],\n      name: 'Blok M'\n    }];\n\n    // Initialize the map\n    const map = L.map(mapRef.current, {\n      center: jakartaCoords,\n      zoom: 11,\n      zoomControl: false\n    });\n\n    // Add the dark mode tile layer\n    L.tileLayer('https://{s}.basemaps.cartocdn.com/dark_all/{z}/{x}/{y}{r}.png', {\n      attribution: '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors &copy; <a href=\"https://carto.com/attributions\">CARTO</a>',\n      subdomains: 'abcd',\n      maxZoom: 20\n    }).addTo(map);\n\n    // Create a circle around Jakarta using Turf.js\n    const center = turf.point(jakartaCoords);\n    const radius = 10; // 10 km radius\n    const options = {\n      steps: 64,\n      units: 'kilometers'\n    };\n    const circle = turf.circle(center, radius, options);\n\n    // Convert Turf circle to Leaflet layer and add to map\n    L.geoJSON(circle, {\n      style: {\n        color: '#ffffff',\n        weight: 2,\n        opacity: 0.7,\n        fillOpacity: 0.1\n      }\n    }).addTo(map);\n\n    // Menambahkan marker untuk setiap lokasi\n    locations.forEach(location => {\n      L.marker(location.coords).addTo(map).bindPopup(location.name);\n    });\n\n    // Add a marker for Jakarta city center\n    L.marker(jakartaCoords).addTo(map).bindPopup('Jakarta City Center').openPopup();\n\n    // Add zoom control to a custom position\n    L.control.zoom({\n      position: 'topright'\n    }).addTo(map);\n\n    // Cleanup function\n    return () => {\n      map.remove();\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: mapRef,\n    className: \"map-container\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 10\n  }, this);\n}\n_s(Map, \"9mn7MMe4fPaZ50ApsOpRWF2HbFg=\");\n_c = Map;\nexport default Map;\nvar _c;\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"names":["React","useEffect","useRef","L","turf","jsxDEV","_jsxDEV","Map","_s","mapRef","jakartaCoords","locations","coords","name","map","current","center","zoom","zoomControl","tileLayer","attribution","subdomains","maxZoom","addTo","point","radius","options","steps","units","circle","geoJSON","style","color","weight","opacity","fillOpacity","forEach","location","marker","bindPopup","openPopup","control","position","remove","ref","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/root/tesis/gps/src/components/Map/Map.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport L from 'leaflet';\nimport * as turf from '@turf/turf';\nimport 'leaflet/dist/leaflet.css';\n\nfunction Map() {\n  const mapRef = useRef(null);\n\n  useEffect(() => {\n    // Jakarta coordinates\n    const jakartaCoords = [-6.2088, 106.8456];\n\n    // Daftar lokasi yang ingin ditampilkan\n    const locations = [\n      { coords: [-6.1751, 106.8650], name: 'Ancol' },\n      { coords: [-6.1754, 106.8272], name: 'Monas' },\n      { coords: [-6.3022, 106.8149], name: 'Ragunan' },\n      { coords: [-6.2919, 106.7892], name: 'Blok M' },\n    ];\n\n    // Initialize the map\n    const map = L.map(mapRef.current, {\n      center: jakartaCoords,\n      zoom: 11,\n      zoomControl: false\n    });\n\n    // Add the dark mode tile layer\n    L.tileLayer('https://{s}.basemaps.cartocdn.com/dark_all/{z}/{x}/{y}{r}.png', {\n      attribution: '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors &copy; <a href=\"https://carto.com/attributions\">CARTO</a>',\n      subdomains: 'abcd',\n      maxZoom: 20\n    }).addTo(map);\n\n    // Create a circle around Jakarta using Turf.js\n    const center = turf.point(jakartaCoords);\n    const radius = 10; // 10 km radius\n    const options = { steps: 64, units: 'kilometers' };\n    const circle = turf.circle(center, radius, options);\n\n    // Convert Turf circle to Leaflet layer and add to map\n    L.geoJSON(circle, {\n      style: {\n        color: '#ffffff',\n        weight: 2,\n        opacity: 0.7,\n        fillOpacity: 0.1\n      }\n    }).addTo(map);\n\n    // Menambahkan marker untuk setiap lokasi\n    locations.forEach(location => {\n      L.marker(location.coords).addTo(map)\n        .bindPopup(location.name);\n    });\n\n    // Add a marker for Jakarta city center\n    L.marker(jakartaCoords).addTo(map)\n      .bindPopup('Jakarta City Center')\n      .openPopup();\n\n    // Add zoom control to a custom position\n    L.control.zoom({\n      position: 'topright'\n    }).addTo(map);\n\n    // Cleanup function\n    return () => {\n      map.remove();\n    };\n  }, []);\n\n  return <div ref={mapRef} className=\"map-container\" />;\n}\n\nexport default Map;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}